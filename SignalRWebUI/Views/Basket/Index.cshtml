@model List<ResultBasketDto>

@{
    Layout = null;

    // Koleksiyon null gelirse boş liste
    var items = Model ?? new List<ResultBasketDto>();
    decimal subTotal = items.Sum(x => x.Price * x.Count);
    decimal tip = Math.Round(subTotal * 0.04m, 2);
    decimal grandTotal = subTotal + tip;
}


<!DOCTYPE html>
<html lang="tr">
<head>
    @await Component.InvokeAsync("_UILayoutHeaderComponentPartial")
    <style>

        .quantity-control {
            display: flex;
            align-items: center;
            gap: 8px;
        }

            .quantity-control .btn {
                width: 36px;
                height: 36px;
                font-size: 18px;
                font-weight: bold;
                border: none;
                outline: none;
                transition: all 0.2s ease-in-out;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                cursor: pointer;
            }

            .quantity-control .decrement {
                background-color: #e74c3c; /* Kırmızı */
                color: #fff;
            }

                .quantity-control .decrement:hover {
                    background-color: #c0392b;
                    transform: scale(1.05);
                }

            .quantity-control .increment {
                background-color: #2ecc71; /* Yeşil */
                color: #fff;
            }

                .quantity-control .increment:hover {
                    background-color: #27ae60;
                    transform: scale(1.05);
                }

            .quantity-control .quantity {
                min-width: 30px;
                text-align: center;
                font-size: 16px;
                font-weight: 600;
                color: #333;
            }



        /* SADECE KUPON KISMINA ÖZEL CSS */
        .coupon-container {
            background: linear-gradient(135deg, #212529 0%, #343a40 100%);
            border-radius: 20px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 15px 35px rgba(33, 37, 41, 0.3);
            border: 1px solid rgba(255, 193, 7, 0.2);
            position: relative;
            overflow: hidden;
        }

            .coupon-container::before {
                content: '';
                position: absolute;
                top: -50%;
                left: -50%;
                width: 200%;
                height: 200%;
                background: radial-gradient(circle, rgba(255, 193, 7, 0.1) 0%, transparent 70%);
                animation: couponShimmer 4s infinite;
            }

        @@keyframes couponShimmer {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .coupon-title {
            color: #ffc107;
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 15px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
            position: relative;
            z-index: 2;
        }

        .coupon-input-group {
            position: relative;
            z-index: 2;
        }

        .coupon-input {
            background: rgba(255, 255, 255, 0.95);
            border: 2px solid rgba(255, 193, 7, 0.3);
            border-radius: 12px;
            padding: 12px 16px;
            font-size: 1rem;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

            .coupon-input:focus {
                border-color: #ffc107;
                box-shadow: 0 0 0 3px rgba(255, 193, 7, 0.3);
                background: white;
                outline: none;
            }

        .coupon-btn {
            background: linear-gradient(135deg, #ffc107, #e0a800);
            border: none;
            border-radius: 12px;
            padding: 12px 24px;
            font-weight: 600;
            color: #212529;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            box-shadow: 0 8px 20px rgba(255, 193, 7, 0.4);
            position: relative;
            overflow: hidden;
        }

            .coupon-btn:hover:not(:disabled) {
                transform: translateY(-2px);
                box-shadow: 0 12px 30px rgba(255, 193, 7, 0.5);
            }

            .coupon-btn:active {
                transform: translateY(0);
            }

            .coupon-btn.applied {
                background: linear-gradient(135deg, #00b894, #00a085);
                box-shadow: 0 8px 20px rgba(0, 184, 148, 0.4);
                cursor: not-allowed;
                color: white;
            }

        .coupon-success {
            background: linear-gradient(135deg, #00b894, #00a085);
            color: white;
            padding: 12px 20px;
            border-radius: 12px;
            text-align: center;
            margin-top: 15px;
            font-weight: 600;
            box-shadow: 0 8px 20px rgba(0, 184, 148, 0.3);
            animation: slideIn 0.5s ease;
            position: relative;
            z-index: 2;
        }

        @@keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .coupon-icon {
            font-size: 1.2rem;
            margin-right: 8px;
        }
    </style>
</head>

<body class="sub_page">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>

    <script type="text/javascript">
        $(document).ready(() => {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("https://localhost:7000/signalrhub")
                .build();

            // Bağlantı durumu yazdır
            $("#connstatus").text(connection.state);

            // SignalR bağlantısını başlat
            connection.start().then(() => {
                $("#connstatus").text(connection.state);
                $("#connstatus").removeClass("pulse");

                // Belirli aralıklarla server'a tetik gönder
                setInterval(async () => {
                    try {
                        await connection.invoke("SendNotifyBasketUpdated");
                    } catch (err) {
                        console.error("SignalR hata:", err);
                        $("#connstatus").addClass("pulse");
                    }
                }, 1000);
            }).catch(err => {
                console.error("SignalR bağlantı hatası:", err);
                $("#connstatus").text("Bağlantı Hatası");
                $("#connstatus").addClass("pulse");
            });

            connection.on("NotifyBasketUpdated", (data) => {
            console.log("Sepet güncellendi:", data);
            updateSummary(); // sadece özet alanlarını güncelle
            });
        });
    </script>


    <!-- ***** NAV ***** -->
    <div class="hero_area">
        @await Component.InvokeAsync("_UILayoutNavbarComponentPartial")
    </div>

    <!-- ***** BREADCRUMB ***** -->
    <div class="container-xxl py-4">
        <nav class="breadcrumb bg-dark text-white rounded px-3 py-2 mb-4">
            <a class="breadcrumb-item text-white-50" href="/Default">Ana Sayfa</a>
            <a class="breadcrumb-item text-white-50" href="/Menu">Menü</a>
            <span class="breadcrumb-item active text-warning">Sepet</span>
        </nav>

        <div class="row g-4">

            <!-- ==================== TABLE ==================== -->
            <div class="col-lg-8">
                <div class="table-responsive shadow-sm rounded">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-warning text-center small text-dark">
                            <tr>
                                <th>#</th>
                                <th>Ürün</th>
                                <th>Adet</th>
                                <th>Birim ₺</th>
                                <th>Toplam ₺</th>
                                <th></th>
                            </tr>
                        </thead>

                        <tbody class="text-center">
                            @if (items.Any())
                            {
                                var idx = 0;
                                foreach (var b in items)
                                {
                                    idx++;
                                    <tr>
                                        <td>@idx</td>
                                        <td class="d-flex align-items-center gap-2">
                                            <img src="@b.Product.ImageUrl" width="45" height="45"
                                                 class="rounded" alt="@b.Product.ProductName" />
                                            <span>@b.Product.ProductName</span>
                                        </td>
                                        <td>
                                            <div class="quantity-control d-flex align-items-center">
                                                <button class="btn btn-sm btn-outline-secondary decrement" data-id="@b.BasketId">-</button>
                                                <span class="mx-2 quantity" id="qty-@b.BasketId">@b.Count</span>
                                                <button class="btn btn-sm btn-outline-secondary increment" data-id="@b.BasketId">+</button>
                                            </div>
                                        </td>
                                        <td>@b.Price.ToString("0.00")</td>
                                        <td>@(b.Price * b.Count)</td>
                                        <td>
                                            <button data-id="@b.BasketId"
                                                    data-name="@b.Product.ProductName"
                                                    class="btn btn-sm btn-danger btn-delete">
                                                <i class="fa fa-times"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="6" class="py-4 text-muted">Sepetiniz boş.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- ==================== SUMMARY / COUPON ==================== -->
            <div class="col-lg-4">
                <!-- Kupon -->
                <div class="coupon-container">
                    <h6 class="coupon-title">
                        <i class="fa fa-gift coupon-icon"></i>
                        Kupon Kodu
                    </h6>
                    <div class="input-group coupon-input-group">
                        <input id="couponCode" class="form-control coupon-input" placeholder="Kupon kodunuz…" />
                        <button id="applyCoupon" class="btn coupon-btn">Uygula</button>
                    </div>
                    <div id="couponSuccess" class="coupon-success" style="display: none;">
                        <i class="fa fa-check-circle coupon-icon"></i>
                        Kupon uygulandı! %15 indirim kazandınız
                    </div>
                </div>

                <!-- Sepet Özeti -->
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-warning text-white fw-semibold">Sepet Özeti</div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between small mb-2">
                            <span>Ara Toplam</span>
                            <span id="subTotal">@subTotal.ToString("0.00") ₺</span>
                        </div>
                        <div class="d-flex justify-content-between small mb-2">
                            <span>Bahşiş (%4)</span>
                            <span id="tip">@tip.ToString("0.00") ₺</span>
                        </div>
                        <hr />
                        <div class="d-flex justify-content-between fs-5 fw-bold">
                            <span>Genel Toplam</span>
                            <span id="grandTotal">@grandTotal.ToString("0.00") ₺</span>
                        </div>

                        <button id="checkoutButton"
                                class="btn btn-warning w-100 mt-3 fw-semibold"
                        @(items.Any() ? "" : "disabled")>
                            SİPARİŞİ TAMAMLA
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @await Component.InvokeAsync("_UILayoutFooterComponentPartial")
    @await Component.InvokeAsync("_UILayoutScriptComponentPartial")





    <!-- SweetAlert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        let couponApplied = false;

        /* ----------- ÜRÜN SİL ----------- */
        document.querySelectorAll('.btn-delete').forEach(btn => {
            btn.addEventListener('click', async () => {
                const id   = btn.dataset.id;
                const name = btn.dataset.name;

                const res = await Swal.fire({
                    title: `${name} ürünü silinsin mi?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Evet',
                    cancelButtonText: 'Hayır'
                });

                if (!res.isConfirmed) return;

                const del = await fetch(`https://localhost:7000/api/Baskets/${id}`, { method: 'DELETE' });

                if (del.ok) {
                    btn.closest('tr').remove();
                    updateSummary();

                    Swal.fire({
                        icon: 'success',
                        title: 'Silindi',
                        text: `${name} sepetten kaldırıldı`,
                        timer: 1500,
                        showConfirmButton: false
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata',
                        text: 'Silme işlemi başarısız oldu'
                    });
                }
            });
        });

        /* ----------- ÖZETİ GÜNCELLE ----------- */
        function updateSummary() {
            let sub = 0;
            document.querySelectorAll('tbody tr').forEach(r => {
                const line = parseFloat(r.children[4].innerText.replace('₺', '').trim().replace(',', '.'));
                if (!isNaN(line)) sub += line;
            });

            if (couponApplied) {
                sub = sub * 0.85;
            }

            const tip   = +(sub * 0.04).toFixed(2);
            const total = +(sub + tip).toFixed(2);

            document.getElementById('subTotal'  ).innerText = sub.toFixed(2)   + ' ₺';
            document.getElementById('tip'       ).innerText = tip.toFixed(2)   + ' ₺';
            document.getElementById('grandTotal').innerText = total.toFixed(2) + ' ₺';
        }

        /* ----------- KUPON ----------- */
             document.getElementById('applyCoupon').addEventListener('click', function() {
            if (couponApplied) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Kupon Zaten Kullanıldı',
                    text: 'Bu kupon zaten uygulanmış durumda'
                });
                return;
            }

            const code = document.getElementById('couponCode').value.trim().toUpperCase();

            // Boş giriş kontrolü
            if (!code) {
                Swal.fire({
                    icon: 'info',
                    title: 'Kupon Kodu Girmediniz',
                    text: 'Lütfen bir kupon kodu girin'
                });
                return;
            }

            // Geçersiz kupon kontrolü
            if (code !== 'AHSEN15') {
                Swal.fire({
                    icon: 'error',
                    title: 'Geçersiz Kupon',
                    text: 'Lütfen geçerli bir kupon kodu girin'
                });
                return;
            }

            // Geçerli kupon → İndirim uygulama işlemleri
            let sub = parseFloat(document.getElementById('subTotal').innerText.replace('₺', '').trim().replace(',', '.'));
            sub = +(sub * 0.85).toFixed(2); // %15 indirim
            const tip = +(sub * 0.04).toFixed(2); // %4 bahşiş
            const total = +(sub + tip).toFixed(2); // toplam

            document.getElementById('subTotal').innerText = sub.toFixed(2) + ' ₺';
            document.getElementById('tip').innerText = tip.toFixed(2) + ' ₺';
            document.getElementById('grandTotal').innerText = total.toFixed(2) + ' ₺';

            couponApplied = true;
            this.classList.add('applied');
            this.innerHTML = '<i class="fa fa-check"></i> Uygulandı';
            this.disabled = true;
            document.getElementById('couponCode').disabled = true;
            document.getElementById('couponSuccess').style.display = 'block';

            Swal.fire({
                icon: 'success',
                title: 'Kupon Uygulandı!',
                text: '%15 indirim kazandınız',
                timer: 2000,
                showConfirmButton: false
            });
        });

    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {

            // Arttır
            document.querySelectorAll('.increment').forEach(btn => {
                btn.addEventListener('click', () => updateQuantity(btn.dataset.id, +1));
            });

            // Azalt
            document.querySelectorAll('.decrement').forEach(btn => {
                btn.addEventListener('click', () => updateQuantity(btn.dataset.id, -1));
            });

            async function updateQuantity(basketId, change) {
            const quantitySpan = document.getElementById(`qty-${basketId}`);
            let currentQty = parseInt(quantitySpan.innerText);
            const newQty = currentQty + change;
            if (newQty < 1) return;

            const response = await fetch(`https://localhost:7000/api/Baskets/${basketId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ count: newQty })
            });

            if (response.ok) {
                quantitySpan.innerText = newQty;

                // 1️⃣ Satır toplamını güncelle
                const row = quantitySpan.closest('tr');
                const unitPrice = parseFloat(row.children[3].innerText.replace(',', '.'));
                const newLineTotal = +(unitPrice * newQty).toFixed(2);
                row.children[4].innerText = newLineTotal.toFixed(2) + ' ₺';

                // 2️⃣ Sepet özetini güncelle
                updateSummary();

                // 3️⃣ SignalR server'a haber ver
                try {
                    await connection.invoke("SendNotifyBasketUpdated");
                } catch (err) {
                    console.error("SignalR invoke error:", err);
                }

            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Hata',
                    text: 'Adet güncellenemedi'
                });
            }
        }

        });
    </script>
</body>
</html>